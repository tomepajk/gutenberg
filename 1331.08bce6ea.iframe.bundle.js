"use strict";(globalThis.webpackChunkgutenberg=globalThis.webpackChunkgutenberg||[]).push([[1331],{"./packages/components/src/dropdown/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_wordpress_compose__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/compose/build-module/hooks/use-merge-refs/index.js"),_wordpress_deprecated__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/deprecated/build-module/index.js"),_context__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/components/src/context/use-context-system.js"),_context__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/components/src/context/context-connect.ts"),_utils_hooks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/components/src/utils/hooks/use-controlled-value.ts"),_popover__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./packages/components/src/popover/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const UnconnectedDropdown=(props,forwardedRef)=>{const{renderContent,renderToggle,className,contentClassName,expandOnMobile,headerTitle,focusOnMount,popoverProps,onClose,onToggle,style,open,defaultOpen,position,variant}=(0,_context__WEBPACK_IMPORTED_MODULE_3__.y)(props,"Dropdown");void 0!==position&&(0,_wordpress_deprecated__WEBPACK_IMPORTED_MODULE_4__.Z)("`position` prop in wp.components.Dropdown",{since:"6.2",alternative:"`popoverProps.placement` prop",hint:"Note that the `position` prop will override any values passed through the `popoverProps.placement` prop."});const[fallbackPopoverAnchor,setFallbackPopoverAnchor]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),containerRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(),[isOpen,setIsOpen]=(0,_utils_hooks__WEBPACK_IMPORTED_MODULE_5__.O)({defaultValue:defaultOpen,value:open,onChange:onToggle});function close(){onClose?.(),setIsOpen(!1)}const args={isOpen:!!isOpen,onToggle:()=>setIsOpen(!isOpen),onClose:close},popoverPropsHaveAnchor=!!(popoverProps?.anchor||popoverProps?.anchorRef||popoverProps?.getAnchorRect||popoverProps?.anchorRect);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className,ref:(0,_wordpress_compose__WEBPACK_IMPORTED_MODULE_6__.Z)([containerRef,forwardedRef,setFallbackPopoverAnchor]),tabIndex:-1,style,children:[renderToggle(args),isOpen&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_popover__WEBPACK_IMPORTED_MODULE_7__.ZP,{position,onClose:close,onFocusOutside:function closeIfFocusOutside(){if(!containerRef.current)return;const{ownerDocument}=containerRef.current,dialog=ownerDocument?.activeElement?.closest('[role="dialog"]');containerRef.current.contains(ownerDocument.activeElement)||dialog&&!dialog.contains(containerRef.current)||close()},expandOnMobile,headerTitle,focusOnMount,offset:13,anchor:popoverPropsHaveAnchor?void 0:fallbackPopoverAnchor,variant,...popoverProps,className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("components-dropdown__content",popoverProps?.className,contentClassName),children:renderContent(args)})]})};UnconnectedDropdown.displayName="UnconnectedDropdown";const Dropdown=(0,_context__WEBPACK_IMPORTED_MODULE_8__.Iq)(UnconnectedDropdown,"Dropdown"),__WEBPACK_DEFAULT_EXPORT__=Dropdown;try{Dropdown.displayName="Dropdown",Dropdown.__docgenInfo={description:'Renders a button that opens a floating content modal when clicked.\n\n```jsx\nimport { Button, Dropdown } from \'@wordpress/components\';\n\nconst MyDropdown = () => (\n  <Dropdown\n    className="my-container-class-name"\n    contentClassName="my-dropdown-content-classname"\n    popoverProps={ { placement: \'bottom-start\' } }\n    renderToggle={ ( { isOpen, onToggle } ) => (\n      <Button\n        variant="primary"\n        onClick={ onToggle }\n        aria-expanded={ isOpen }\n      >\n        Toggle Dropdown!\n      </Button>\n    ) }\n    renderContent={ () => <div>This is the content of the dropdown.</div> }\n  />\n);\n```',displayName:"Dropdown",props:{className:{defaultValue:null,description:"The className of the global container.",name:"className",required:!1,type:{name:"string"}},contentClassName:{defaultValue:null,description:"If you want to target the dropdown menu for styling purposes,\nyou need to provide a contentClassName because it's not being rendered\nas a child of the container node.",name:"contentClassName",required:!1,type:{name:"string"}},expandOnMobile:{defaultValue:{value:"false"},description:"Opt-in prop to show popovers fullscreen on mobile.",name:"expandOnMobile",required:!1,type:{name:"boolean"}},focusOnMount:{defaultValue:{value:"'firstElement'"},description:'By default, the first tabbable element in the popover will receive focus\nwhen it mounts. This is the same as setting this prop to "firstElement".\nSpecifying a true value will focus the container instead.\nSpecifying a false value disables the focus handling entirely\n(this should only be done when an appropriately accessible\nsubstitute behavior exists).',name:"focusOnMount",required:!1,type:{name:'boolean | "firstElement"'}},headerTitle:{defaultValue:null,description:"Set this to customize the text that is shown in the dropdown's header\nwhen it is fullscreen on mobile.",name:"headerTitle",required:!1,type:{name:"string"}},onClose:{defaultValue:null,description:"A callback invoked when the popover should be closed.",name:"onClose",required:!1,type:{name:"() => void"}},onToggle:{defaultValue:null,description:"A callback invoked when the state of the dropdown changes\nfrom open to closed and vice versa.",name:"onToggle",required:!1,type:{name:"(willOpen: boolean) => void"}},popoverProps:{defaultValue:null,description:"Properties of popoverProps object will be passed as props\nto the Popover component.\nUse this object to access properties/features\nof the Popover component that are not already exposed\nin the Dropdown component,\ne.g.: the ability to have the popover without an arrow.",name:"popoverProps",required:!1,type:{name:'Omit<ComponentPropsWithoutRef<WordPressComponent<ElementType<any>, Omit<WordPressComponentProps<PopoverProps, "div", false>, "style" | "onDrag" | "onDragEnd" | ... 53 more ... | "ignoreStrict"> & RefAttributes<...>, boolean>>, "children">'}},renderContent:{defaultValue:null,description:"A callback invoked to render the content of the dropdown menu.\nIts first argument is the same as the renderToggle prop.",name:"renderContent",required:!0,type:{name:"(props: CallbackProps) => ReactNode"}},renderToggle:{defaultValue:null,description:"A callback invoked to render the Dropdown Toggle Button.\n\nThe first argument of the callback is an object\ncontaining the following properties:\n\n- isOpen: whether the dropdown menu is opened or not\n- onToggle: A function switching the dropdown menu's state\nfrom open to closed and vice versa\n- onClose: A function that closes the menu if invoked",name:"renderToggle",required:!0,type:{name:"(props: CallbackProps) => ReactNode"}},style:{defaultValue:null,description:"The style of the global container.",name:"style",required:!1,type:{name:"CSSProperties"}},position:{defaultValue:null,description:"Legacy way to specify the popover's position with respect to its anchor.\nFor details about the possible values, see the `Popover` component's docs.\n_Note: this prop is deprecated. Use the `popoverProps.placement` prop\ninstead._\n@deprecated",name:"position",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"bottom"'},{value:'"top"'},{value:'"middle left"'},{value:'"middle center"'},{value:'"middle right"'},{value:'"bottom left"'},{value:'"bottom center"'},{value:'"bottom right"'},{value:'"top left"'},{value:'"top center"'},{value:'"top right"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left bottom"'},{value:'"middle left top"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center bottom"'},{value:'"middle center top"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right bottom"'},{value:'"middle right top"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left bottom"'},{value:'"bottom left top"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center bottom"'},{value:'"bottom center top"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right bottom"'},{value:'"bottom right top"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left bottom"'},{value:'"top left top"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center bottom"'},{value:'"top center top"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right bottom"'},{value:'"top right top"'}]}},open:{defaultValue:null,description:"The controlled open state of the dropdown.\nMust be used in conjunction with `onToggle`.",name:"open",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"The open state of the dropdown when initially rendered.\nUse when you do not need to control its open state. It will be overridden\nby the `open` prop if it is specified on the component's first render.",name:"defaultOpen",required:!1,type:{name:"boolean"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 507 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/dropdown/index.tsx#Dropdown"]={docgenInfo:Dropdown.__docgenInfo,name:"Dropdown",path:"packages/components/src/dropdown/index.tsx#Dropdown"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/popover/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{J2:()=>Popover,ZP:()=>popover});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),floating_ui_core=__webpack_require__("./node_modules/@floating-ui/core/dist/floating-ui.core.mjs"),floating_ui_dom=__webpack_require__("./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"),floating_ui_react_dom_esm=__webpack_require__("./packages/components/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js"),use_reduced_motion=__webpack_require__("./packages/components/node_modules/framer-motion/dist/es/utils/reduced-motion/use-reduced-motion.mjs"),motion=__webpack_require__("./packages/components/node_modules/framer-motion/dist/es/render/dom/motion.mjs"),react_dom=__webpack_require__("./node_modules/react-dom/index.js"),use_viewport_match=__webpack_require__("./packages/compose/build-module/hooks/use-viewport-match/index.js"),use_dialog=__webpack_require__("./packages/compose/build-module/hooks/use-dialog/index.js"),use_merge_refs=__webpack_require__("./packages/compose/build-module/hooks/use-merge-refs/index.js"),library_close=__webpack_require__("./packages/icons/build-module/library/close.js"),build_module=__webpack_require__("./packages/deprecated/build-module/index.js"),svg=__webpack_require__("./packages/primitives/build-module/svg/index.js"),src_button=__webpack_require__("./packages/components/src/button/index.tsx"),scroll_lock=__webpack_require__("./packages/components/src/scroll-lock/index.tsx"),use_slot=__webpack_require__("./packages/components/src/slot-fill/bubbles-virtually/use-slot.ts"),slot_fill=__webpack_require__("./packages/components/src/slot-fill/index.tsx"),utils=__webpack_require__("./packages/components/src/popover/utils.ts"),use_context_system=__webpack_require__("./packages/components/src/context/use-context-system.js"),context_system_provider=__webpack_require__("./packages/components/src/context/context-system-provider.js"),context_connect=__webpack_require__("./packages/components/src/context/context-connect.ts");var style_provider=__webpack_require__("./packages/components/src/style-provider/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const SLOT_NAME="Popover",ArrowTriangle=()=>(0,jsx_runtime.jsxs)(svg.Wj,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 100",className:"components-popover__triangle",role:"presentation",children:[(0,jsx_runtime.jsx)(svg.y$,{className:"components-popover__triangle-bg",d:"M 0 0 L 50 50 L 100 0"}),(0,jsx_runtime.jsx)(svg.y$,{className:"components-popover__triangle-border",d:"M 0 0 L 50 50 L 100 0",vectorEffect:"non-scaling-stroke"})]});ArrowTriangle.displayName="ArrowTriangle";const slotNameContext=(0,react.createContext)(void 0),Popover=(0,context_connect.Iq)(((props,forwardedRef)=>{const{animate=!0,headerTitle,constrainTabbing,onClose,children,className,noArrow=!0,position,placement:placementProp="bottom-start",offset:offsetProp=0,focusOnMount="firstElement",anchor,expandOnMobile,onFocusOutside,__unstableSlotName=SLOT_NAME,flip=!0,resize=!0,shift=!1,inline=!1,variant,__unstableForcePosition,anchorRef,anchorRect,getAnchorRect,isAlternate,...contentProps}=(0,use_context_system.y)(props,"Popover");let computedFlipProp=flip,computedResizeProp=resize;void 0!==__unstableForcePosition&&((0,build_module.Z)("`__unstableForcePosition` prop in wp.components.Popover",{since:"6.1",version:"6.3",alternative:"`flip={ false }` and  `resize={ false }`"}),computedFlipProp=!__unstableForcePosition,computedResizeProp=!__unstableForcePosition),void 0!==anchorRef&&(0,build_module.Z)("`anchorRef` prop in wp.components.Popover",{since:"6.1",alternative:"`anchor` prop"}),void 0!==anchorRect&&(0,build_module.Z)("`anchorRect` prop in wp.components.Popover",{since:"6.1",alternative:"`anchor` prop"}),void 0!==getAnchorRect&&(0,build_module.Z)("`getAnchorRect` prop in wp.components.Popover",{since:"6.1",alternative:"`anchor` prop"});const computedVariant=isAlternate?"toolbar":variant;void 0!==isAlternate&&(0,build_module.Z)("`isAlternate` prop in wp.components.Popover",{since:"6.2",alternative:"`variant` prop with the `'toolbar'` value"});const arrowRef=(0,react.useRef)(null),[fallbackReferenceElement,setFallbackReferenceElement]=(0,react.useState)(null),anchorRefFallback=(0,react.useCallback)((node=>{setFallbackReferenceElement(node)}),[]),isMobileViewport=(0,use_viewport_match.Z)("medium","<"),isExpanded=expandOnMobile&&isMobileViewport,hasArrow=!isExpanded&&!noArrow,normalizedPlacementFromProps=position?(0,utils.KF)(position):placementProp,middleware=[..."overlay"===placementProp?[{name:"overlay",fn:({rects})=>rects.reference},(0,floating_ui_dom.dp)({apply({rects,elements}){var _elements$floating;const{firstElementChild}=null!==(_elements$floating=elements.floating)&&void 0!==_elements$floating?_elements$floating:{};firstElementChild instanceof HTMLElement&&Object.assign(firstElementChild.style,{width:`${rects.reference.width}px`,height:`${rects.reference.height}px`})}})]:[],(0,floating_ui_core.cv)(offsetProp),computedFlipProp&&(0,floating_ui_dom.RR)(),computedResizeProp&&(0,floating_ui_dom.dp)({apply(sizeProps){var _refs$floating$curren;const{firstElementChild}=null!==(_refs$floating$curren=refs.floating.current)&&void 0!==_refs$floating$curren?_refs$floating$curren:{};firstElementChild instanceof HTMLElement&&Object.assign(firstElementChild.style,{maxHeight:`${sizeProps.availableHeight}px`,overflow:"auto"})}}),shift&&(0,floating_ui_dom.uY)({crossAxis:!0,limiter:(0,floating_ui_dom.dr)(),padding:1}),(0,floating_ui_react_dom_esm.x7)({element:arrowRef})],slotName=(0,react.useContext)(slotNameContext)||__unstableSlotName,slot=(0,use_slot.Z)(slotName);let onDialogClose;(onClose||onFocusOutside)&&(onDialogClose=(type,event)=>{"focus-outside"===type&&onFocusOutside?onFocusOutside(event):onClose&&onClose()});const[dialogRef,dialogProps]=(0,use_dialog.Z)({constrainTabbing,focusOnMount,__unstableOnClose:onDialogClose,onClose:onDialogClose}),{x,y,refs,strategy,update,placement:computedPlacement,middlewareData:{arrow:arrowData}}=(0,floating_ui_react_dom_esm.YF)({placement:"overlay"===normalizedPlacementFromProps?void 0:normalizedPlacementFromProps,middleware,whileElementsMounted:(referenceParam,floatingParam,updateParam)=>(0,floating_ui_dom.Me)(referenceParam,floatingParam,updateParam,{layoutShift:!1,animationFrame:!0})}),arrowCallbackRef=(0,react.useCallback)((node=>{arrowRef.current=node,update()}),[update]),anchorRefTop=anchorRef?.top,anchorRefBottom=anchorRef?.bottom,anchorRefStartContainer=anchorRef?.startContainer,anchorRefCurrent=anchorRef?.current;(0,react.useLayoutEffect)((()=>{const resultingReferenceElement=(0,utils.CK)({anchor,anchorRef,anchorRect,getAnchorRect,fallbackReferenceElement});refs.setReference(resultingReferenceElement)}),[anchor,anchorRef,anchorRefTop,anchorRefBottom,anchorRefStartContainer,anchorRefCurrent,anchorRect,getAnchorRect,fallbackReferenceElement,refs]);const mergedFloatingRef=(0,use_merge_refs.Z)([refs.setFloating,dialogRef,forwardedRef]),style=isExpanded?void 0:{position:strategy,top:0,left:0,x:(0,utils.sw)(x),y:(0,utils.sw)(y)},shouldReduceMotion=(0,use_reduced_motion.J)(),shouldAnimate=animate&&!isExpanded&&!shouldReduceMotion,[animationFinished,setAnimationFinished]=(0,react.useState)(!1),{style:motionInlineStyles,...otherMotionProps}=(0,react.useMemo)((()=>(0,utils.d9)(computedPlacement)),[computedPlacement]),animationProps=shouldAnimate?{style:{...motionInlineStyles,...style},onAnimationComplete:()=>setAnimationFinished(!0),...otherMotionProps}:{animate:!1,style},isPositioned=(!shouldAnimate||animationFinished)&&null!==x&&null!==y,[showBackdrop,setShowBackdrop]=(0,react.useState)(!1),contextValue=(0,react.useMemo)((()=>({ColorPicker:{onPickerDragStart(){setShowBackdrop(!0)},onPickerDragEnd(){setShowBackdrop(!1)}}})),[]);let content=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[showBackdrop&&(0,jsx_runtime.jsx)("div",{className:"components-popover-pointer-events-trap","aria-hidden":"true",onClick:()=>setShowBackdrop(!1)}),(0,jsx_runtime.jsxs)(motion.E.div,{className:classnames_default()("components-popover",className,{"is-expanded":isExpanded,"is-positioned":isPositioned,[`is-${"toolbar"===computedVariant?"alternate":computedVariant}`]:computedVariant}),...animationProps,...contentProps,ref:mergedFloatingRef,...dialogProps,tabIndex:-1,children:[isExpanded&&(0,jsx_runtime.jsx)(scroll_lock.Z,{}),isExpanded&&(0,jsx_runtime.jsxs)("div",{className:"components-popover__header",children:[(0,jsx_runtime.jsx)("span",{className:"components-popover__header-title",children:headerTitle}),(0,jsx_runtime.jsx)(src_button.ZP,{className:"components-popover__close",icon:library_close.Z,onClick:onClose})]}),(0,jsx_runtime.jsx)("div",{className:"components-popover__content",children:(0,jsx_runtime.jsx)(context_system_provider.G8,{value:contextValue,children})}),hasArrow&&(0,jsx_runtime.jsx)("div",{ref:arrowCallbackRef,className:["components-popover__arrow",`is-${computedPlacement.split("-")[0]}`].join(" "),style:{left:void 0!==arrowData?.x&&Number.isFinite(arrowData.x)?`${arrowData.x}px`:"",top:void 0!==arrowData?.y&&Number.isFinite(arrowData.y)?`${arrowData.y}px`:""},children:(0,jsx_runtime.jsx)(ArrowTriangle,{})})]})]});const shouldRenderWithinSlot=slot.ref&&!inline,hasAnchor=anchorRef||anchorRect||anchor;return shouldRenderWithinSlot?content=(0,jsx_runtime.jsx)(slot_fill.de,{name:slotName,children:content}):inline||(content=(0,react_dom.createPortal)((0,jsx_runtime.jsx)(style_provider.V,{document,children:content}),(()=>{let container=document.body.querySelector(".components-popover__fallback-container");return container||(container=document.createElement("div"),container.className="components-popover__fallback-container",document.body.append(container)),container})())),hasAnchor?content:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{ref:anchorRefFallback}),content]})}),"Popover");function PopoverSlot({name=SLOT_NAME},ref){return(0,jsx_runtime.jsx)(slot_fill.g7,{bubblesVirtually:!0,name,className:"popover-slot",ref})}PopoverSlot.displayName="PopoverSlot",Popover.Slot=(0,react.forwardRef)(PopoverSlot),Popover.__unstableSlotNameProvider=slotNameContext.Provider;const popover=Popover;try{SLOT_NAME.displayName="SLOT_NAME",SLOT_NAME.__docgenInfo={description:"Name of slot in which popover should fill.",displayName:"SLOT_NAME",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/popover/index.tsx#SLOT_NAME"]={docgenInfo:SLOT_NAME.__docgenInfo,name:"SLOT_NAME",path:"packages/components/src/popover/index.tsx#SLOT_NAME"})}catch(__react_docgen_typescript_loader_error){}try{Popover.displayName="Popover",Popover.__docgenInfo={description:"`Popover` renders its content in a floating modal. If no explicit anchor is passed via props, it anchors to its parent element by default.\n\n```jsx\nimport { Button, Popover } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\nconst MyPopover = () => {\n\tconst [ isVisible, setIsVisible ] = useState( false );\n\tconst toggleVisible = () => {\n\t\tsetIsVisible( ( state ) => ! state );\n\t};\n\n\treturn (\n\t\t<Button variant=\"secondary\" onClick={ toggleVisible }>\n\t\t\tToggle Popover!\n\t\t\t{ isVisible && <Popover>Popover is toggled!</Popover> }\n\t\t</Button>\n\t);\n};\n```",displayName:"Popover",props:{animate:{defaultValue:{value:"true"},description:"Whether the popover should animate when opening.",name:"animate",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The `children` elements rendered as the popover's content.",name:"children",required:!0,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Whether to render the popover inline or within the slot.",name:"inline",required:!1,type:{name:"boolean"}},offset:{defaultValue:null,description:"The distance (in px) between the anchor and the popover.",name:"offset",required:!1,type:{name:"number"}},onClose:{defaultValue:null,description:"A callback invoked when the popover should be closed.",name:"onClose",required:!1,type:{name:"() => void"}},anchor:{defaultValue:null,description:"The element that should be used by the popover as its anchor. It can either\nbe an `Element` or, alternatively, a `VirtualElement` — ie. an object with\nthe `getBoundingClientRect()` and the `ownerDocument` properties defined.\n\n**The anchor element should be stored in local state** rather than a\nplain React ref to ensure reactive updating when it changes.",name:"anchor",required:!1,type:{name:"Element | VirtualElement"}},placement:{defaultValue:{value:"'bottom-start'"},description:"Used to specify the popover's position with respect to its anchor.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'},{value:'"bottom"'},{value:'"top"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"top-end"'},{value:'"top-start"'},{value:'"overlay"'}]}},position:{defaultValue:null,description:"Legacy way to specify the popover's position with respect to its anchor.\n_Note: this prop is deprecated. Use the `placement` prop instead._",name:"position",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"bottom"'},{value:'"top"'},{value:'"middle left"'},{value:'"middle center"'},{value:'"middle right"'},{value:'"bottom left"'},{value:'"bottom center"'},{value:'"bottom right"'},{value:'"top left"'},{value:'"top center"'},{value:'"top right"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left bottom"'},{value:'"middle left top"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center bottom"'},{value:'"middle center top"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right bottom"'},{value:'"middle right top"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left bottom"'},{value:'"bottom left top"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center bottom"'},{value:'"bottom center top"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right bottom"'},{value:'"bottom right top"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left bottom"'},{value:'"top left top"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center bottom"'},{value:'"top center top"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right bottom"'},{value:'"top right top"'}]}},variant:{defaultValue:{value:"undefined"},description:"Specifies the popover's style.\n\nLeave undefined for the default style. Other values are:\n- 'unstyled':  The popover is essentially without any visible style, it\n               has no background, border, outline or drop shadow, but\n               the popover contents are still displayed.\n- 'toolbar':   A style that has no elevation, but a high contrast with\n               other elements. This is matches the style of the\n               `Toolbar` component.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"toolbar"'},{value:'"unstyled"'}]}},resize:{defaultValue:{value:"true"},description:"Adjusts the size of the popover to prevent its contents from going out of\nview when meeting the viewport edges.",name:"resize",required:!1,type:{name:"boolean"}},shift:{defaultValue:{value:"false"},description:"Enables the `Popover` to shift in order to stay in view when meeting the\nviewport edges.",name:"shift",required:!1,type:{name:"boolean"}},__unstableSlotName:{defaultValue:{value:"'Popover'"},description:"The name of the Slot in which the popover should be rendered. It should\nbe also passed to the corresponding `PopoverSlot` component.",name:"__unstableSlotName",required:!1,type:{name:"string"}},expandOnMobile:{defaultValue:null,description:"Show the popover fullscreen on mobile viewports.",name:"expandOnMobile",required:!1,type:{name:"boolean"}},flip:{defaultValue:{value:"true"},description:"Specifies whether the popover should flip across its axis if there isn't\nspace for it in the normal placement.\nWhen the using a 'top' placement, the popover will switch to a 'bottom'\nplacement. When using a 'left' placement, the popover will switch to a\n`right' placement.\nThe popover will retain its alignment of 'start' or 'end' when flipping.",name:"flip",required:!1,type:{name:"boolean"}},constrainTabbing:{defaultValue:{value:"`focusOnMount` !== false"},description:"Determines whether tabbing is constrained to within the popover,\npreventing keyboard focus from leaving the popover content without\nexplicit focus elswhere, or whether the popover remains part of the wider\ntab order. If no value is passed, it will be derived from `focusOnMount`.",name:"constrainTabbing",required:!1,type:{name:"boolean"}},focusOnMount:{defaultValue:{value:"'firstElement'"},description:'By default, the _first tabbable element_ in the popover will receive focus\nwhen it mounts. This is the same as setting this prop to `"firstElement"`.\nSpecifying a `false` value disables the focus handling entirely (this\nshould only be done when an appropriately accessible substitute behavior\nexists).',name:"focusOnMount",required:!1,type:{name:'boolean | "firstElement"'}},onFocusOutside:{defaultValue:null,description:"A callback invoked when the focus leaves the opened popover. This should\nonly be provided in advanced use-cases when a popover should close under\nspecific circumstances (for example, if the new `document.activeElement`\nis content of or otherwise controlling popover visibility).\n\nWhen not provided, the `onClose` callback will be called instead.",name:"onFocusOutside",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>) => void"}},headerTitle:{defaultValue:null,description:"Used to customize the header text shown when the popover is toggled to\nfullscreen on mobile viewports (see the `expandOnMobile` prop).",name:"headerTitle",required:!1,type:{name:"string"}},noArrow:{defaultValue:{value:"true"},description:"Used to show/hide the arrow that points at the popover's anchor.",name:"noArrow",required:!1,type:{name:"boolean"}},__unstableForcePosition:{defaultValue:null,description:"Prevent the popover from flipping and resizing when meeting the viewport\nedges. _Note: this prop is deprecated. Instead, provide use the individual\n`flip` and `resize` props._\n@deprecated",name:"__unstableForcePosition",required:!1,type:{name:"boolean"}},anchorRect:{defaultValue:null,description:"An object extending a `DOMRect` with an additional optional `ownerDocument`\nproperty, used to specify a fixed popover position.\n@deprecated",name:"anchorRect",required:!1,type:{name:"DomRectWithOwnerDocument"}},anchorRef:{defaultValue:null,description:"Used to specify a fixed popover position. It can be an `Element`, a React\nreference to an `element`, an object with a `top` and a `bottom` properties\n(both pointing to elements), or a `range`.\n@deprecated",name:"anchorRef",required:!1,type:{name:"Element | PopoverAnchorRefReference | PopoverAnchorRefTopBottom | Range"}},getAnchorRect:{defaultValue:null,description:"A function returning the same value as the one expected by the `anchorRect`\nprop, used to specify a dynamic popover position.\n@deprecated",name:"getAnchorRect",required:!1,type:{name:"(fallbackReferenceElement: Element) => DomRectWithOwnerDocument"}},isAlternate:{defaultValue:null,description:"Used to enable a different visual style for the popover.\n_Note: this prop is deprecated. Use the `variant` prop with the\n'toolbar' value instead._\n@deprecated",name:"isAlternate",required:!1,type:{name:"boolean"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 507 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/popover/index.tsx#Popover"]={docgenInfo:Popover.__docgenInfo,name:"Popover",path:"packages/components/src/popover/index.tsx#Popover"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/scroll-lock/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");let previousScrollTop=0;function setLocked(locked){const scrollingElement=document.scrollingElement||document.body;locked&&(previousScrollTop=scrollingElement.scrollTop);const methodName=locked?"add":"remove";scrollingElement.classList[methodName]("lockscroll"),document.documentElement.classList[methodName]("lockscroll"),locked||(scrollingElement.scrollTop=previousScrollTop)}let lockCounter=0;function ScrollLock(){return(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(0===lockCounter&&setLocked(!0),++lockCounter,()=>{1===lockCounter&&setLocked(!1),--lockCounter})),[]),null}const __WEBPACK_DEFAULT_EXPORT__=ScrollLock;try{ScrollLock.displayName="ScrollLock",ScrollLock.__docgenInfo={description:"ScrollLock is a content-free React component for declaratively preventing\nscroll bleed from modal UI to the page body. This component applies a\n`lockscroll` class to the `document.documentElement` and\n`document.scrollingElement` elements to stop the body from scrolling. When it\nis present, the lock is applied.\n\n```jsx\nimport { ScrollLock, Button } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\nconst MyScrollLock = () => {\n  const [ isScrollLocked, setIsScrollLocked ] = useState( false );\n\n  const toggleLock = () => {\n    setIsScrollLocked( ( locked ) => ! locked ) );\n  };\n\n  return (\n    <div>\n      <Button variant=\"secondary\" onClick={ toggleLock }>\n        Toggle scroll lock\n      </Button>\n      { isScrollLocked && <ScrollLock /> }\n      <p>\n        Scroll locked:\n        <strong>{ isScrollLocked ? 'Yes' : 'No' }</strong>\n      </p>\n    </div>\n  );\n};\n```",displayName:"ScrollLock",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/scroll-lock/index.tsx#ScrollLock"]={docgenInfo:ScrollLock.__docgenInfo,name:"ScrollLock",path:"packages/components/src/scroll-lock/index.tsx#ScrollLock"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/utils/hooks/use-controlled-value.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{O:()=>useControlledValue});var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useControlledValue({defaultValue,onChange,value:valueProp}){const hasValue=void 0!==valueProp,initialValue=hasValue?valueProp:defaultValue,[state,setState]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValue);let setValue;return setValue=hasValue&&"function"==typeof onChange?onChange:hasValue||"function"!=typeof onChange?setState:nextValue=>{onChange(nextValue),setState(nextValue)},[hasValue?valueProp:state,setValue]}}}]);